import cv2
import numpy as np
from matplotlib import pyplot as plt
from skimage.feature import hog
from skimage import exposure 
img = cv2.imread("image_path.jpg",0)
image = cv2.resize(img,(500,500))
blurred_image = cv2.GaussianBlur(image, (5,3), 7)
edges = cv2.Canny(blurred_image, 20, 50)
cv2.imshow("Original", image)
cv2.imshow("Edge-detected Image", edges)
cv2.waitKey(0)
cv2.destroyAllWindows()

# Check if the image is loaded correctly
if image is None:
    print("Error: Could not load the image. Check the file path!")
    exit()
# Applying HOG (without channel_axis)
fc, img_hog = hog(image, orientations=8, pixels_per_cell=(16, 6), 
                  cells_per_block=(1, 1), visualize=True)
# Rescaling the Image
rescale_inten = exposure.rescale_intensity(img_hog, in_range=(0, 2))

# Display Original Image and HOG Features
figure, (a1, a2) = plt.subplots(1, 2, figsize=(12, 6), sharex=True, sharey=True)

a1.axis('off')
a1.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for correct color display
a1.set_title('Original Image')

a2.axis('off')
a2.imshow(rescale_inten, cmap='gray')
a2.set_title('Histogram of Oriented Gradients (HOG) Image')

plt.show()
cv2.imshow("Gray",image)
cv2.imshow("HOC", img_hog)
cv2.imshow("NO idea", rescale_inten)
cv2.waitKey(0)
cv2.destroyAllWindows()
